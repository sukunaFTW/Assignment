Document Review: Code Quality Assessment

Task: Complete the code review based on code quality aspects.

Class: Testcase101

package com.org.happyfox;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;

public class Testcase101 {

    public static void main(String[] args) throws InterruptedException, AWTException {
        System.setProperty("webdriver.gecko.driver", "C:\\Users\\Johny\\Downloads\\geckodriver-v0.33.0-win64\\geckodriver.exe");
        WebDriver driver = new FirefoxDriver();
        driver.get("https://interview.supporthive.com/staff/");
        driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
        driver.manage().window().maximize();
        driver.findElement(By.id("id_username")).sendKeys("Agent");
        driver.findElement(By.id("id_password")).sendKeys("Agent@123");
        driver.findElement(By.id("btn-submit")).click();
        WebElement tickets = driver.findElement(By.id("ember29"));
        Actions action = new Actions(driver);
        action.moveToElement(tickets).build().perform();
        WebElement statuses = driver.findElement(By.linkText("Statuses"));
        statuses.click();
        driver.findElement(By.xpath("/html/body/div[3]/div/section/section/div/header/button")).click();
        driver.findElement(By.tagName("input")).sendKeys("Issue Created");
        WebElement statusColourSelect = driver.findElement(By.xpath("//div[@class='sp-replacer sp-light']"));
        statusColourSelect.click();

        WebElement statusColourEnter = driver.findElement(By.xpath("//input[@class='sp-input']"));
        statusColourEnter.clear();
        statusColourEnter.sendKeys("#47963f");

        Robot r = new Robot();
        r.keyPress(KeyEvent.VK_ESCAPE);

        WebElement firstElement = driver.findElement(By.xpath("//a[@id='first-link']"));
        firstElement.click();

        WebElement secondElement = driver.findElement(By.xpath("//a[@id='second-link']"));
        secondElement.click();

        driver.findElement(By.tagName("textarea")).sendKeys("Status when a new ticket is created in HappyFox");
        WebElement addCreate = driver.findElement(By.xpath("//button[@class ='hf-entity-footer_primary hf-primary-action ember-view']"));
        addCreate.click();

        Thread.sleep(3000);

        WebElement moveTo = driver.findElement(By.xpath("//td[@class ='lt-cell align-center hf-mod-no-padding ember-view']"));
        action.moveToElement(moveTo).build().perform();
        moveTo.click();

        Thread.sleep(9000);

        WebElement issue = driver.findElement(By.xpath("//div[contains(text(),'Issue Created')]"));
        action.moveToElement(issue).build().perform();

        WebElement make = driver.findElement(By.linkText("Make Default"));
        make.click();
        driver.findElement(By.linkText("Priorities")).click();
        driver.findElement(By.xpath("//header/button[1]")).click();
        driver.findElement(By.tagName("input")).sendKeys("Assistance required");
        driver.findElement(By.tagName("textarea")).sendKeys("Priority of the newly created tickets");
        WebElement button = driver.findElement(By.cssSelector("button[data-test-id='add-priority']"));
        button.click();

        Thread.sleep(9000);

        WebElement tickets2 = driver.findElement(By.id("ember29"));
        action.moveToElement(tickets2).build().perform();
        WebElement priorities2 = driver.findElement(By.linkText("Priorities"));
        priorities2.click();
        driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
        driver.findElement(By.xpath("/html[1]/body[1]/div[3]/div[1]/section[1]/section[1]/div[1]/div[1]/section[1]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/table[1]/tbody[1]/tr[9]/td[2]")).click();
        driver.findElement(By.linkText("Delete")).click();
        WebElement delete = driver.findElement(By.cssSelector("button[data-test-id='delete-dependants-primary-action']"));
        delete.click();

        Thread.sleep(9000);
        driver.findElement(By.xpath("/html[1]/body[1]/div[3]/div[1]/header[1]/div[2]/nav[1]/div[7]/div[1]/div[1]")).click();
        driver.findElement(By.linkText("Logout")).click();
    }
}




Issues and Improvements:

1. Hardcoded Paths and Credentials:

Issue: The WebDriver path and login credentials are hardcoded.
Improvement: Externalize these values to a configuration file or environment variables

System.setProperty("webdriver.gecko.driver", "C:\\Users\\Johny\\Downloads\\geckodriver-v0.33.0-win64\\geckodriver.exe");
driver.findElement(By.id("id_username")).sendKeys("Agent");
driver.findElement(By.id("id_password")).sendKeys("Agent@123");


2. Thread.sleep Usage:

Issue: Using Thread.sleep for waiting is unreliable.
Improvement: Use WebDriverWait for better handling of wait conditions

Thread.sleep(3000);
Thread.sleep(9000);


3. Overuse of Absolute XPath:

Issue: Using absolute XPath expressions, which are fragile and can break with minor UI changes.
Improvement: Use relative XPath or other locators like By.id, By.className, By.cssSelector

driver.findElement(By.xpath("/html/body/div[3]/div/section/section/div/header/button")).click();
driver.findElement(By.xpath("/html[1]/body[1]/div[3]/div[1]/section[1]/section[1]/div[1]/div[1]/section[1]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/table[1]/tbody[1]/tr[9]/td[2]")).click();


4. Exception Handling:

Issue: Lack of proper exception handling.
Improvement: Implement try-catch blocks to handle exceptions gracefully.

public static void main(String[] args) throws InterruptedException, AWTException {


5. Resource Management:

Issue: WebDriver is not closed properly, which can lead to resource leaks.
Improvement: Ensure WebDriver is closed using a finally block or try-with-resources statement.

driver.findElement(By.linkText("Logout")).click();

6. Nested Classes
Issue: Multiple classes are defined within a single file.
Improvement: Each class should be in its own file to improve readability and maintainability.


public class PagesforAutomationAssignment {



Refactored Code Suggestions

1. External Configuration: Use a properties file (e.g., config.properties) to externalize configuration values.

Summary of Improvements
Externalized Configuration: Used a properties file for configuration values.
Better Waiting Mechanism: Replaced Thread.sleep with WebDriverWait.
Robust Locators: Used more robust locators instead of absolute XPath.
Exception Handling: Added try-catch blocks for proper exception handling.
Resource Management: Ensured WebDriver is closed properly.
Class Separation: Placed each class in its own file for better maintainability.
By addressing these issues, the code quality, readability, and maintainability will significantly improve.